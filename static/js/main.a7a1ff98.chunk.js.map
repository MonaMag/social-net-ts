{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Users/Users.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","reportWebVitals.ts","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","redux/profile-reducer.ts","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","redux/dialogs-reducer.ts","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","redux/users-reducer.ts","components/Users/Users.tsx","components/Users/UsersContainer.tsx","App.tsx","redux/redux-store.ts","index.tsx","components/Navbar/Navbar.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","props","className","s","header","src","Navbar","nav","item","to","activeClassName","activeLink","ProfileInfo","descriptionBlock","ADD_POST","UPDATE_NEW_POST_TEXT","initialState","posts","id","message","likesCount","newPostText","profileReducer","state","action","type","newPost","length","newText","Post","MyPosts","postsElements","map","p","postsBlock","onChange","e","updateNewPostText","currentTarget","value","onClick","trim","addPost","MyPostsContainer","connect","profilePage","dispatch","text","updateNewPostTextAC","Profile","News","Music","Settings","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","dialogs","name","messages","newMessageBody","dialogsReducer","body","DialogItem","dialog","active","Message","Dialogs","dialogsElements","dialogsPage","d","messagesElements","m","dialogsItems","newMessage","newMessageChange","placeholder","sendMessage","DialogsContainer","FOLLOW","UNFOLLOW","SET_USERS","users","usersReducer","u","userId","followed","Users","setUsers","photoUrl","fullName","status","location","city","country","wrapper","userPhoto","btn","unfollow","follow","userInfo","userInfoPart","UsersContainer","usersPage","followAC","unfollowAC","setUsersAC","App","path","render","rootReducer","combineReducers","store","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a7a1ff98.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"active\":\"Dialogs_active__2sQhs\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"messages\":\"Dialogs_messages__1w_Up\",\"newMessage\":\"Dialogs_newMessage__1cWkx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Users_wrapper__3zs-t\",\"userPhoto\":\"Users_userPhoto__17MJB\",\"btn\":\"Users_btn__9AIH5\",\"userInfo\":\"Users_userInfo__21fTd\",\"userInfoPart\":\"Users_userInfoPart__Q8ms-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport s from './Header.module.css';\n\nfunction Header(props:any) {\n  return (\n      <header className={s.header}>\n        <img\n            src='https://camo.githubusercontent.com/d425a598a348014050fa0e9bb9b09b820795df5c89bb7131abad448f87ff1491/68747470733a2f2f63646e2e737667706f726e2e636f6d2f6c6f676f732f636f6465727372616e6b2e737667'/>\n      </header>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './Navbar.module.css';\n\nfunction Navbar(props: any) {\n    return <nav className={s.nav}>\n        <div className={s.item}>\n            <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink></div>\n        <div className={s.item}>\n            <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink></div>\n        <div className={s.item}>\n            <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink></div>\n        <div className={s.item}>\n            <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink></div>\n        <div className={s.item}>\n            <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink></div>\n    </nav>\n}\n\nexport default Navbar;","import React from 'react';\nimport s from './ProfileInfo.module.css';\n\n\nfunction ProfileInfo(props: any) {\n  return (\n      <div>\n        <img src='https://www.thinkingbusinessblog.com/wp-content/uploads/2014/12/step-up-1000x430.jpg'/>\n        <div className={s.descriptionBlock}>\n          ava + description\n        </div>\n      </div>\n  );\n}\n\nexport default ProfileInfo;","const ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\n\nexport type PostPropsType = {\n    id: number\n    message: string\n    likesCount: number\n}\ntype initialStateType = {\n    posts: Array<PostPropsType>\n    newPostText: string\n}\n\nconst initialState: initialStateType = {\n    posts: [\n        {id: 1, message: 'Hi', likesCount: 12},\n        {id: 2, message: 'How are you?!', likesCount: 20},\n        {id: 3, message: 'Hi, my dear!', likesCount: 18},\n        {id: 4, message: 'Where are you!', likesCount: 25}\n    ],\n    newPostText: ''\n};\n\n\nconst profileReducer = (state: initialStateType = initialState, action: ProfileReducerActionType) => {\n    switch (action.type) {\n        case ADD_POST: {\n            const newPost: PostPropsType = {\n                id: state.posts.length + 1,\n                message: state.newPostText,\n                likesCount: 0\n            };\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n                newPostText: ''\n            };\n        }\n        case UPDATE_NEW_POST_TEXT: {\n            return {\n                ...state,\n                newPostText: action.newText\n            };\n        }\n        default:\n            return state;\n    }\n}\n\n\n//Action creators\n\nexport type ProfileReducerActionType = ReturnType<typeof addPostAC> | ReturnType<typeof updateNewPostTextAC>\n\nexport const addPostAC = () => ({type: ADD_POST} as const)\nexport const updateNewPostTextAC = (text: string) => ({type: UPDATE_NEW_POST_TEXT, newText: text} as const)\n\n\nexport default profileReducer;","import React from 'react';\nimport s from './Post.module.css';\nimport {PostPropsType} from \"../../../../redux/store\";\n\n\nfunction Post(props: PostPropsType) {\n    return (\n        <div className={s.item}>\n            <img\n                src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRZ7TRTvspdse0xZ8rttWKwKYKzjMnsMi7dXpJr6EdyHRwRJqRsog_fY1EoCiLJBo6vejA&usqp=CAU'/>\n            {props.message}\n            <div>\n                <span>like</span> {props.likesCount}\n            </div>\n\n        </div>\n\n    );\n}\n\nexport default Post;","import React, {ChangeEvent} from 'react';\nimport s from './MyPosts.module.css';\nimport Post from \"./Post/Post\";\nimport { PostPropsType} from \"../../../redux/profile-reducer\";\n\n\ntype MyPostsPropsType = {\n    posts: Array<PostPropsType>\n    newPostText: string\n    addPost: (newPostText: string) => void\n    updateNewPostText: (newText: string) => void\n\n}\n\nfunction MyPosts(props: MyPostsPropsType) {\n    let postsElements =\n        props.posts.map(p => <Post key={p.id} id={p.id} message={p.message} likesCount={p.likesCount}/>)\n\n    const addPost = () => {\n        if(props.newPostText.trim() !== '') {\n            props.addPost(props.newPostText);\n        }\n    }\n    const onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        props.updateNewPostText(e.currentTarget.value);\n    }\n\n    return (\n        <div className={s.postsBlock}>\n            <h3>My posts</h3>\n            <div>\n                <div><textarea onChange={ onPostChange } value={props.newPostText}/></div>\n                <div>\n                    <button onClick={ addPost }>Add post</button>\n                </div>\n            </div>\n\n            <div className={s.posts}>\n                {postsElements}\n            </div>\n\n        </div>\n    );\n}\n\nexport default MyPosts;","import React from 'react';\nimport {addPostAC, PostPropsType, updateNewPostTextAC} from \"../../../redux/profile-reducer\";\nimport {AppStateType} from \"../../../redux/redux-store\";\nimport {connect} from \"react-redux\";\nimport MyPosts from \"./MyPosts\";\n\n\ntype MapStatePropsType = {\n    posts: Array<PostPropsType>\n    newPostText: string\n}\ntype MapDispatchPropsType = {\n    addPost: (newPostText: string) => void\n    updateNewPostText: (text:string) => void\n}\n\n\n const mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n}\n\nlet mapDispatchToProps = (dispatch: any): MapDispatchPropsType => {\n    return {\n        addPost: (newPostText: string) => {\n            if (newPostText.trim() !== '') {\n                dispatch(addPostAC());\n            }\n        },\n        updateNewPostText: (text:string) => {\n            dispatch(updateNewPostTextAC(text))\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\n\nexport default MyPostsContainer;\n","import React from 'react';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\n\n\n/*type ProfilePropsType = {\n    store: StoreType\n}*/\n\nfunction Profile() {\n    return (\n        <div>\n            <ProfileInfo/>\n            <MyPostsContainer />\n        </div>\n    );\n}\n\nexport default Profile;","import React from 'react';\nimport s from './News.module.css';\n\nfunction News(props: any) {\n  return (\n      <div>\n        News\n      </div>\n  );\n}\n\nexport default News;","import React from 'react';\nimport s from './Music.module.css';\n\nfunction Music(props: any) {\n  return (\n      <div>\n        Music\n      </div>\n  );\n}\n\nexport default Music;","import React from 'react';\nimport s from './Settings.module.css';\n\nfunction Settings(props: any) {\n  return (\n      <div>\n        Settings\n      </div>\n  );\n}\n\nexport default Settings;","const UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\nconst SEND_MESSAGE = 'SEND-MESSAGE';\n\nexport type DialogItemPropsType = {\n    id: number\n    name: string\n}\nexport type MessagePropsType = {\n    id: number\n    message: string\n}\n\nexport type initialStateType = {\n    dialogs: Array<DialogItemPropsType>\n    messages: Array<MessagePropsType>\n    newMessageBody: string\n}\nconst initialState: initialStateType = {\n    dialogs: [\n        {id: 1, name: 'Hanna'},\n        {id: 2, name: 'Kira'},\n        {id: 3, name: 'Tim'},\n        {id: 4, name: 'Sasha'},\n        {id: 5, name: 'Anna'},\n        {id: 6, name: 'Ali'}\n    ],\n    messages: [\n        {id: 1, message: 'Hi'},\n        {id: 2, message: 'How are you?!'},\n        {id: 3, message: 'Hi, my dear!'},\n        {id: 4, message: 'Where are you?'}\n    ],\n    newMessageBody: ''\n}\n//export type DialogsPageStateType = typeof initialState\n\n\nconst dialogsReducer = (state: initialStateType = initialState, action: DialogsReducerActionType): initialStateType => {\n    switch (action.type) {\n        case UPDATE_NEW_MESSAGE_BODY:\n            return {\n                ...state, newMessageBody: action.body\n            };\n        case SEND_MESSAGE:\n            const body = state.newMessageBody;\n            return {\n                ...state,\n                newMessageBody: '',\n                messages: [...state.messages, {id: 6, message: body}]\n            };\n        default:\n            return state;\n    }\n}\n\n//Action creators\n\nexport type DialogsReducerActionType = ReturnType<typeof updateMessageBodyAC> | ReturnType<typeof sendMessageAC>\n\nexport const updateMessageBodyAC = (body: string) => ({type: UPDATE_NEW_MESSAGE_BODY, body: body} as const)\nexport const sendMessageAC = () => ({type: SEND_MESSAGE,} as const)\n\n\nexport default dialogsReducer;","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from './../Dialogs.module.css';\nimport {DialogItemPropsType} from \"../../../redux/store\";\n\n\n\nfunction DialogItem(props: DialogItemPropsType) {\n    return (\n        <div className={s.dialog + ' ' + s.active}>\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink></div>\n    );\n}\n\nexport default DialogItem;\n\n","import React from 'react';\nimport s from './../Dialogs.module.css';\nimport {MessagePropsType} from \"../../../redux/store\";\n\n\nfunction Message(props: MessagePropsType) {\n    return (\n        <div>\n            <div className={s.dialog}>{props.message}</div>\n        </div>\n    );\n}\n\nexport default Message;","import React, {ChangeEvent} from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {DialogsPageType} from \"../../redux/store\";\n\n\ntype DialogsPropsType = {\n    dialogsPage: DialogsPageType\n    sendMessage: (newMessageBody: string) => void\n    newMessageChange: (text: string) => void\n}\n\nfunction Dialogs(props: DialogsPropsType) {\n\n    let dialogsElements = props.dialogsPage.dialogs.map(d => (<DialogItem key={d.id} name={d.name} id={d.id}/>));\n    let messagesElements = props.dialogsPage.messages.map(m => (<Message key={m.id} message={m.message} id={m.id}/>));\n    let newMessageBody = props.dialogsPage.newMessageBody;\n\n\n    const onSendMessageClick = () => {\n        props.sendMessage(newMessageBody)\n    }\n\n    const onNewMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        props.newMessageChange(e.currentTarget.value)\n    }\n\n    return (\n        <div>\n            <div className={s.dialogs}>\n                <div className={s.dialogsItems}>\n                    {dialogsElements}\n                </div>\n\n                <div className={s.messages}>\n                    <div>{messagesElements}</div>\n\n                    <div className={s.newMessage}>\n                        <div><textarea value={newMessageBody}\n                                       onChange={onNewMessageChange}\n                                       placeholder='Enter your message'/></div>\n                        <div>\n                            <button onClick={onSendMessageClick}>Send</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Dialogs;\n\n","import React  from 'react';\nimport {initialStateType, sendMessageAC, updateMessageBodyAC} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {connect} from \"react-redux\";\n\n\ntype MapStatePropsType = {\n    dialogsPage: initialStateType\n}\n\ntype MapDispatchPropsType = {\n    sendMessage: () => void\n    newMessageChange: (text:string) => void\n}\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        dialogsPage: state.dialogsPage\n    }\n}\n\nlet mapDispatchToProps = (dispatch: any) => {\n    return {\n        sendMessage: () => {\n            dispatch(sendMessageAC());\n        },\n        newMessageChange: (text:string) => {\n            dispatch(updateMessageBodyAC(text))\n        }\n    }\n}\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps) (Dialogs)\n\n\nexport default DialogsContainer;\n\n","\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\n\n\nexport type UserPropsType = {\n    id: number\n    photoUrl: string\n    fullName: string\n    status: string\n    followed: boolean\n    location: { country: string, city: string }\n}\nexport type initialStateType = {\n    users: Array<UserPropsType>\n}\n\nconst initialState: initialStateType = {\n    users: [\n        /*{\n            id: 1,\n            photoUrl: 'https://klike.net/uploads/posts/2019-12/1576662740_32.jpg',\n            fullName: 'Dmitry',\n            status: 'I am a  boss',\n            location: {city: 'Minsk', country: 'Belarus'},\n            followed: false,\n        },\n        {\n            id: 2,\n            photoUrl: 'https://klike.net/uploads/posts/2019-12/1576662740_32.jpg',\n            fullName: 'Sasha',\n            status: 'I am a  boss',\n            location: {city: 'Moscow', country: 'Russia'},\n            followed: false,\n        },\n        {\n            id: 3,\n            photoUrl: 'https://klike.net/uploads/posts/2019-12/1576662740_32.jpg',\n            fullName: 'Andrew',\n            status: 'I am a  boss too',\n            location: {city: 'Kiev', country: 'Ukraine'},\n            followed: false,\n        }*/\n    ],\n};\n\nconst usersReducer = (state: initialStateType = initialState, action: UsersReducerActionType) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: true}\n                    }\n                    return u;\n                })\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: false}\n                    }\n                    return u;\n                })\n            }\n        case SET_USERS: {\n            return  {...state, users: [ ...state.users, ...action.users]}\n        }\n        default:\n            return state;\n    }\n}\n\n\n//Action creators\n\nexport type UsersReducerActionType = ReturnType<typeof followAC> | ReturnType<typeof unfollowAC> | ReturnType<typeof setUsersAC>\n\nexport const followAC = (userId: number) => ({type: FOLLOW, userId} as const);\nexport const unfollowAC = (userId: number) => ({type: UNFOLLOW, userId} as const);\nexport const setUsersAC = (users: Array<UserPropsType>) => ({type: SET_USERS, users} as const);\n\n\nexport default usersReducer;","import React from 'react';\nimport {UserPropsType} from \"../../redux/users-reducer\";\nimport s from './Users.module.css';\n\nexport type UsersType = {\n    users: Array<UserPropsType>\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n    setUsers: (users: Array<UserPropsType>) => void\n}\n\nfunction Users(props: UsersType) {\n    if (props.users.length === 0) {\n        props.setUsers([\n                {\n                    id: 1,\n                    photoUrl: 'https://klike.net/uploads/posts/2019-12/1576662740_32.jpg',\n                    fullName: 'Dmitry',\n                    status: 'I am a  boss',\n                    location: {city: 'Minsk', country: 'Belarus'},\n                    followed: false,\n                },\n                {\n                    id: 2,\n                    photoUrl: 'https://klike.net/uploads/posts/2019-12/1576662740_32.jpg',\n                    fullName: 'Sasha',\n                    status: 'I am a  boss',\n                    location: {city: 'Moscow', country: 'Russia'},\n                    followed: false,\n                },\n                {\n                    id: 3,\n                    photoUrl: 'https://klike.net/uploads/posts/2019-12/1576662740_32.jpg',\n                    fullName: 'Andrew',\n                    status: 'I am a  boss too',\n                    location: {city: 'Kiev', country: 'Ukraine'},\n                    followed: false,\n                }\n            ]\n        )\n    }\n    return (\n        <div>\n            {\n                props.users.map(u => <div key={u.id} className={s.wrapper}>\n\n                    <div>\n                        <div>\n                            <img src={u.photoUrl} className={s.userPhoto}/>\n                        </div>\n                        <div className={s.btn}>\n                            {u.followed\n                                ? <button onClick={() => props.unfollow(u.id)}>Unfollow</button>\n                                : <button onClick={() => props.follow(u.id)}>Follow</button>}\n                        </div>\n                    </div>\n\n                    <div className={s.userInfo}>\n                        <div className={s.userInfoPart}>\n                            <div>{u.fullName}</div>\n                            <div>{u.status}</div>\n                        </div>\n                        <div className={s.userInfoPart}>\n                            <div>{u.location.country}</div>\n                            <div>{u.location.city}</div>\n                        </div>\n                    </div>\n\n                </div>)\n            }\n        </div>\n    )\n}\n    export default Users;","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {followAC, setUsersAC, unfollowAC, UserPropsType} from \"../../redux/users-reducer\";\nimport Users from \"./Users\";\nimport {AppStateType} from \"../../redux/redux-store\";\n\ntype MapStateType = {\n    users: Array<UserPropsType>\n}\ntype MapDispatchType = {\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n    setUsers: (users: Array<UserPropsType>) => void\n}\n\n\n\nconst mapStateToProps = (state: AppStateType): MapStateType => {\n    return {\n        users: state.usersPage.users\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any): MapDispatchType => {\n    return {\n        follow: (userId: number) => {\n            dispatch(followAC(userId));\n        },\n        unfollow: (userId: number) => {\n            dispatch(unfollowAC(userId));\n        },\n        setUsers: (users: any) => {\n            dispatch(setUsersAC(users));\n        },\n    }\n}\n\nconst UsersContainer = connect(mapStateToProps, mapDispatchToProps) (Users);\n\nexport default UsersContainer;","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header/Header\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Profile from \"./components/Profile/Profile\";\nimport {Route} from 'react-router-dom';\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\n\n\n\nfunction  App() {\n    return (\n        <div className='app-wrapper'>\n            <Header/>\n            <Navbar/>\n            <div className='app-wrapper-content'>\n                <Route path='/profile' render={() => <Profile />}/>\n\n                <Route path='/dialogs' render={() => <DialogsContainer />}/>\n\n                <Route path='/news' render={() => <News/>}/>\n                <Route path='/music' render={() => <Music/>}/>\n                <Route path='/settings' render={() => <Settings/>}/>\n\n                <Route path='/users' render={() => <UsersContainer />}/>\n            </div>\n        </div>\n    )\n}\n\nexport default App;\n","import {combineReducers, createStore } from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport usersReducer from \"./users-reducer\";\n\n\nconst rootReducer = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    usersPage: usersReducer,\n});\n\n//creating state and store type\nexport type AppStateType = ReturnType<typeof rootReducer>\nexport type StoreType = typeof store\n\nconst store = createStore(rootReducer);\n\n\nexport default store;","import reportWebVitals from './reportWebVitals';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport store, {AppStateType} from './redux/redux-store';\nimport {Provider} from \"react-redux\";\n\n\n/*const rerenderEntireTree = (state: AppStateType) => {*/\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root'));\n/*}\nrerenderEntireTree(store.getState());*/\n\n/*store.subscribe(() => {\n    let state = store.getState()\n    rerenderEntireTree(state)\n});*/\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"activeLink\":\"Navbar_activeLink__3etBE\"};"],"sourceRoot":""}